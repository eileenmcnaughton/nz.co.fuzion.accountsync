<?php

$status = civicrm_api3('Contribution', 'getoptions', [
  'field' => 'contribution_status_id',
]);
$defaultContributionStatus = array_keys(array_intersect($status['values'], [
  'Completed',
  'Pending',
]));

return [
  'account_sync_queue_contacts' => [
    'group_name' => 'Account Sync',
    'group' => 'accountsync',
    'name' => 'account_sync_queue_contacts',
    'type' => 'Array',
    'add' => '4.4',
    'is_domain' => 1,
    'is_contact' => 0,
    'description' => 'Entity updates to trigger queuing for contact creation',
    'title' => 'Entities to trigger contact Create in the Remote System',
    'help_text' => 'When these entities are created the contact will be queued for sync',
    'default' => ['Contribution'],
    'html_type' => 'select',
    'html_attributes' => [
      'class' => 'crm-select2',
      'multiple' => TRUE,
    ],
    'pseudoconstant' => [
      'callback' => 'CRM_Accountsync_BAO_Config::getSupportedContributionEntities',
    ],
  ],
  'account_sync_queue_update_contacts' => [
    'group_name' => 'Account Sync',
    'group' => 'accountsync',
    'name' => 'account_sync_queue_update_contacts',
    'type' => 'Array',
    'add' => '4.4',
    'is_domain' => 1,
    'is_contact' => 0,
    'description' => 'Trigger contact update when entity edited or created',
    'title' => 'Entities to trigger contact update',
    'help_text' => 'When these entities are created the contact will be queued for update',
    'default' => ['Contact', 'Email', 'Address', 'Phone'],
    'html_type' => 'select',
    'html_attributes' => [
      'class' => 'crm-select2',
      'multiple' => TRUE,
    ],
    'pseudoconstant' => [
      'callback' => 'CRM_Accountsync_BAO_Config::getSupportedContactUpdateEntities',
    ],
  ],
  'account_sync_queue_create_invoice' => [
    'group_name' => 'Account Sync',
    'group' => 'accountsync',
    'name' => 'account_sync_queue_create_invoice',
    'type' => 'Array',
    'add' => '4.4',
    'is_domain' => 1,
    'is_contact' => 0,
    'description' => 'Trigger Invoice Creation when entity created',
    'title' => 'Entities to trigger invoice create',
    'help_text' => 'When these entities are created an invoice will be queued for create',
    'html_type' => 'select',
    'default' => ['Contribution'],
    'html_attributes' => [
      'class' => 'crm-select2',
      'multiple' => TRUE,
    ],
    'pseudoconstant' => [
      'callback' => 'CRM_Accountsync_BAO_Config::getSupportedContributionCreateEntities',
    ],
  ],
  'account_sync_skip_inv_by_pymt_processor' => [
    'group_name' => 'Account Sync',
    'group' => 'accountsync',
    'name' => 'account_sync_skip_inv_by_pymt_processor',
    'type' => 'Array',
    'add' => '4.4',
    'is_domain' => 1,
    'is_contact' => 0,
    'description' => 'Skip trigger of Invoice Creation when entities use this payment processor',
    'title' => 'Payment processors to trigger skip of invoice create',
    'help_text' => 'When entities that use these payment processors are created an invoice will not be queued for create',
    'html_type' => 'select',
    'default' => [''],
    'html_attributes' => [
      'class' => 'crm-select2',
      'multiple' => TRUE,
    ],
    'pseudoconstant' => [
      'callback' => 'CRM_Accountsync_BAO_Config::getPaymentProcessors',
    ],
  ],
  'account_sync_contribution_day_zero' => [
    'group_name' => 'Account Sync',
    'group' => 'accountsync',
    'name' => 'account_sync_contribution_day_zero',
    'type' => 'Date',
    'is_domain' => 1,
    'is_contact' => 0,
    'description' => 'Do not include contributions prior to this date',
    'title' => 'Day zero for contributions (eg. 2014-12-25 for Christmas 2014)',
    'help_text' => 'Earlier contributions are never synced.',
    'html_type' => 'datepicker',
    'default' => '1990-01-01',
    'html_attributes' => [
      'formatType' => 'activityDateTime',
    ],
  ],
  'account_sync_send_receipt' => [
    'group_name' => 'Account Sync',
    'group' => 'accountsync',
    'name' => 'account_sync_send_receipt',
    'type' => 'Array',
    'add' => '4.4',
    'is_domain' => 1,
    'is_contact' => 0,
    'default' => ['no_override'],
    'title' => 'Send receipts for Contributions',
    'description' => '',
    'help_text' => 'Set \'Send receipt?\' option for all Contributions synced.',
    'html_type' => 'select',
    'pseudoconstant' => [
      'callback' => 'CRM_Accountsync_BAO_AccountInvoice::receiptOptions',
    ],
  ],
  'account_sync_push_contribution_status' => [
    'group_name' => 'Account Sync',
    'group' => 'accountsync',
    'name' => 'account_sync_push_contribution_status',
    'type' => 'Array',
    'add' => '4.7',
    'is_domain' => 1,
    'is_contact' => 0,
    'default' => $defaultContributionStatus,
    'description' => 'Select contribution status that can be pushed to Invoice table.',
    'title' => 'Push Contribution Status',
    'help_text' => '',
    'html_type' => 'select',
    'html_attributes' => [
      'multiple' => 1,
      'class' => 'crm-select2',
    ],
    'pseudoconstant' => [
      'optionGroupName' => 'contribution_status',
    ],
  ],
];
